--DDL (Linguagem de DEFINIÇÃO DE DADOS) - ESTRUTURA
--ALTER - Alterar,EX:ALTER TABLE DBO.Produto / ADD Descricao VARCHAR (50) NULL; ADD CONSTRAINT PK_Produto PRIMARY KEY(ID);
--CREATE - Criar, EX: CREATE DATABASE bdi221; CREATE TABLE Produto( );
--DROP - Remover, EX: DROP TABLE Produto; DROP TABLE IF EXISTS Cliente;

-- DML (Linguagem de MANIPILAÇÃO DE DADOS) - DADOS
--SELECT - SELECT Campos FROM Tabela EX: SELECT nome, sobrenome, dt_nasc FROM pessoa 
         --SELECT * FROM Tabela
         --SELECT Campo FROM Tabela WHERE Condicao
--INSERT - INSERT INTO tabela (campos) VALUES (valores); OU INSERT INTO tabela (valores);
--UPDATE - UPDATE Tabela SET Campo = NovoValor WHERE Condicao EX: UPDATE PESSOA SET nome = 'Milena' WHERE id = 3
--DELETE - DELETE FROM Tabela WHERE Condicao EX: DELETE FROM pessoa WHERE id BETWEEN 3 AND 5

--DCL (Linguagem de CONTROLE DE DADOS) - CONTROLE DE ACESSO
--GRANT - Atribui
--REVOKE - Remove
--DENY - impedir explicitamente que um usuário receba uma permissão específica.

--TCL (Linguagem de CONTROLE DE TRANSAÇÕES) -gerenciar as mudanças feitas por instruções DML (DADOS) .
--COMMIT - Salvar permanentemente qualquer transação no banco de dados.
--ROLLBACK - Restaura o banco de dados para o último estado commited.

-- ON DELETE CASCADE ???
-- ON UPDATE CASCADE ???
-- DBO ??

--CRIAÇÃO DO BANCO DE DADOS
CREATE DATABASE bdi221;
GO

-- DEFINIR QUAL BANCO DE DADOS VAMOS UTILIZAR
USE bdi221;
GO

-- DELETAR A TABELA PRODUTO, SO SE NAO EXISTIR ( IF EXISTS), DBO(Objeo do Banco de Dados) --
DROP TABLE IF EXISTS DBO.PRODUTO;
GO

-- CRIAÇÃO DA TABELA PRODUTO -- Identity -> Configura um auto incremento
CREATE TABLE PRODUTO(
	ID INT IDENTITY(1,1) NOT NULL,
	NOME VARCHAR(50),
	DESCRICAO VARCHAR(255),
	VALOR DECIMAL(5,2)
);
GO

-- ADICIONAR O CAMPO TIPO A TABELA PRODUTO
ALTER TABLE PRODUTO
ADD TIPO CHAR(1) NULL;
GO

-- SELECIONA TODOS OS DADOS DE TODAS AS COLUNAS
SELECT * FROM PRODUTO
-- SELECIONA TODOS OS DADOS DA COLUNA NOME
SELECT NOME FROM PRODUTO
-- SELECIONA TODOS OS DADOS DA COLUNA NOME QUE TENHA ID 55
SELECT NOME FROM PRODUTO WHERE ID=55

-- ADICIONAR CHAVE PRIMARIA A TAVELA PRODUTO
ALTER TABLE PRODUTO
ADD CONSTRAINT PK_PRODUTO PRIMARY KEY(ID);
GO

-- DELETAR A TABELA PRONTUARIO, SÓ SE NÃO EXISTIR ( IF EXISTS) --
DROP TABLE IF EXISTS DBO.PRONTUARIO;
GO

-- CRIAÇÃO DA TABELA PRONTUARIO
CREATE TABLE PRONTUARIO(
    ID INT IDENTITY(1,1)NOT NULL,
    DESCRICAO VARCHAR (255),
    TEMPERATURA DECIMAL(3,1),
    PESO DECIMAL(5,2),
    CONSTRAINT PK_PRONTUARIO PRIMARY KEY(ID)
);
GO

-- DELETAR A TABELA PET, SÓ SE NÃO EXISTIR ( IF EXISTS) --
DROP TABLE IF EXISTS DBO.PET;
GO

-- CRIAÇÃO DA TABELA PET
CREATE TABLE PET(
    ID INT IDENTITY(1,1)NOT NULL,
    NOME VARCHAR(50),
    ESPECIE VARCHAR(50),
    PORTE VARCHAR(50),
    DT_NASC DATE,
    ID_PRONTUARIO INT NULL,
    CONSTRAINT PK_PET PRIMARY KEY(ID),
    CONSTRAINT PK_PET_PRONTUARIO FOREIGN KEY(ID_PRONTUARIO) REFERENCES DBO.PRONTUARIO (ID)
);
GO

-- DELETE DA TEBELA PRODUTO
DROP TABLE IF EXISTS DBO.PRODUTO;
GO

-- RECRIACAO DA TABELA PRODUTO JA COM A CHAVE PRIMARIA
CREATE TABLE PRODUTO(
    ID INT IDENTITY(1,1) NOT NULL,
    NOME VARCHAR (50),
    DESCRICAO VARCHAR(255),
    TIPO CHAR (1),
    VALOR DECIMAL(5,2),
    CONSTRAINT PK_PRODUTO PRIMARY KEY(ID)
);
GO

-- DELETE TABELA FORMA DE PAGAMENTO --
DROP TABLE IF EXISTS DBO.FORMA_PAGAMENTO;
GO

-- CRIACAO DA TABELA FORMA DE PAGAMENTO
CREATE TABLE FORMA_PAGAMENTO(
    ID INT IDENTITY(1,1) NOT NULL,
    DESCRICAO VARCHAR(50) NOT NULL,
    CONSTRAINT PK_FORMA_PAGAMENTO PRIMARY KEY(ID)
);
GO

-- DELETE DA TABELA FUNCIONARIO
DROP TABLE IF EXISTS FUNCIONARIO;
GO

-- CRIACAO DA TABELA FUNCIONARIO
CREATE TABLE FUNCIONARIO(
    ID INT IDENTITY(1,1) NOT NULL,
    NOME VARCHAR(255) NOT NULL,
    CPF VARCHAR(11) NOT NULL,
    SALARIO DECIMAL(6,2) NOT NULL,
    -- Codigo do Endereço --
    TIPO CHAR(1) NULL,
    N_CONSELHO INT NULL,
    ESPECIALIDADE VARCHAR(20) NULL,
    COMISSAO DECIMAL(4,2),
    CONSTRAINT PK_FUNCIONARIO PRIMARY KEY(ID)
);
GO

-- DELETE DA TABELA CLIENTE
DROP TABLE IF EXISTS CLIENTE;
GO

-- CRIACAO DA TABELA CLIENTE 
CREATE TABLE CLIENTE(
    ID INT IDENTITY(1,1) NOT NULL,
    NOME VARCHAR(255) NOT NULL,
    -- Codigo Endereço
    -- Telefone
    EMAIL VARCHAR(50)NOT NULL,
    CONSTRAINT PK_CLIENTE PRIMARY KEY(ID)
    
); 
GO

-- DELETE TABELA CLIENTE_PET
DROP TABLE IF EXISTS CLIENTE_PET;
GO

-- CRIAÇÃO DA TABELA CLIENTE_PET 
CREATE TABLE CLIENTE_PET(
    ID INT IDENTITY(1,1) NOT NULL,
    ID_CLIENTE INT NOT NULL,
    ID_PET INT NOT NULL,
    CONSTRAINT PK_CLIENTE_PET PRIMARY KEY(ID),
    CONSTRAINT FK_CLIENTE_PET_CLIENTE FOREIGN KEY(ID_CLIENTE) REFERENCES DBO.CLIENTE(ID),
    CONSTRAINT FK_CLIENTE_PET_PET FOREIGN KEY(ID_PET) REFERENCES DBO.PET (ID)
    
); 
GO
